//Time Complexity = O(nlogn)
//Space Complexity= O(1)


class Solution {
public:
    int minCapability(vector<int>& nums, int k) {
        int n =nums.size();
        int high = *max_element(nums.begin(),nums.end());
        int low = *min_element(nums.begin(),nums.end());
        while(low<=high){
            int mid= low +(high-low)/2;
            int robbed=0;
            for(int i =0; i<n; i++){
                if(mid>=nums[i]){
                    robbed++,i++;
                    
                }
            }
            if(robbed<k){
                low=mid+1;
            }
            else{
                high= mid-1;
            }
        }
        return low;
        
    }
};
