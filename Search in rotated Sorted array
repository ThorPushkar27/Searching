// Using Binary Search in a two sorted part of array.
// Time Complexity O(logn)

class Solution {
public:
    
    int search(vector<int>& nums, int target) {
        int ans=-1;
        int n = nums.size();
        int s=0;
        int e=n-1;
        while(s<=e){
            int mid = s+(e-s)/2;
            if(nums[mid]==target) ans=mid;
            if(target>= nums[0] && nums[mid]<nums[0] ){
                //ans=mid;
                e=mid-1;
            }
            else if(target< nums[0] && nums[mid]>=nums[0] ){
                //ans=mid;
                s=mid+1;
            }
            else{
                if(nums[mid]<target){
                    s=mid+1;
                }
                else{
                    e = mid-1;
                }

            }
        }
        return ans;

        
    }
};
