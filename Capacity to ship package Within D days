// Binary Search solution.


class Solution {
public:
    int dayss(int cap, vector<int> weights){
        int n= weights.size();
        int day =1;
        int current_cap = cap;
        for(int i =0; i<n; i++){
            if(weights[i]<= current_cap){
                current_cap-= weights[i];
            }
            else{
                day++;
                current_cap = cap;
                current_cap -= weights[i];
            }
        }
        return day;
    }
    int shipWithinDays(vector<int>& weights, int days) {
        int min_cap = *max_element(weights.begin(),weights.end());
        int max_cap=0;
        int ans =INT_MAX;
        int n = weights.size();
        for(int i =0; i< n ; i++){
            max_cap += weights[i];
        }
        while(min_cap<=max_cap){
           
            int cap=min_cap+(max_cap-min_cap)/2;
            int a =dayss(cap,weights);
            if(a<=days){
                ans = cap;
                max_cap =cap-1;

            }
            else{
                min_cap= cap+1;
            }
        }
        return ans;
    }
};
