// Sabse jayada yahi question disturb kiya hai.
// Binary search algorithm.
// Time Complexity O(nlog(max_element)).





class Solution {
public:
    long long hour(int k, vector<int> piles){
        long long hours=0;
        //int current_speed = k;
        int n = piles.size();
        for(int i = 0; i<n; i++){
            hours+=(piles[i]/k);
            if(piles[i]%k) hours++;    
        }
        return hours;
    }
    int minEatingSpeed(vector<int>& piles, int h) {
        int n = piles.size();
        int ans= INT_MAX;
        int max_speed = *max_element(piles.begin(), piles.end());

        int s=1;
        int e=max_speed;
        while(s<=e){
            int mid = (s+(e-s)/2);
            long long hr = hour(mid,piles);
            if(hr<=h){
                ans=mid;
                e=mid-1;
                
                
            }
            else{
                s=mid+1;
            }
        }
        return s;
        
    }
};
